<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="PictureBox1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        jN7dCXAwu//++5tHH3003Uxlgg4AAQg6AAQg6AAQgKADQACCDgABCDoABCDoABCAoANAAIIOA3H11Vc3
        n//85zvz3HPPpcum3Hfffb31d999d7qs44orruisv/LKK9MlwAFK0GEgPvjBD/Z+BGN/gf7c5z7XW79q
        1ap02ZQnnniit/6MM85IlwEHKEGHgdi4cWMvuNdcc026bMrxxx/fW9/+MtYLL7yQLh35wQ9+0FvfPmMH
        hkHQYSC2b9/eC+7q1avTZSPt92qnayfnrrvuSpePfOELX+it/elPf5ouAw5Qgg4D0f7K37x58zrBPfLI
        I9NlIzfeeGMvzpOzfv36dPnI+9///s66WbNm7fc1euDAIugwIO9973t7gX7kkUfSZc3ZZ5/dWzc5xx57
        bLq8+de//tUsWrSos+7EE09MlwEHMEGHAbn88st7gb755ps7a15++eXmjW98Y2/d9Pnd737XOeahhx7q
        rbnooos6a4ADm6DDgPz4xz/+t+H9+c9/3tl/6qmnNieccEJn27XXXts5ZuvWrb3z3nLLLZ01wIFN0GFA
        du3aNXpte3p4Tz755M6ayy67rLN/06ZNzZe+9KXOtve9732dYy6++OJe0NuPsQHDIegwMO9617s64Z2Y
        mBi9YS63v729/utf/7qzbc6cOaM/Dia95z3v6exftmzZ1D5gGAQdBqa9xZ4+m/7Vr3412vfkk092ti9Z
        smS0/ZVXXmkOP/zwzr7bbrtttK99zb39fPr0fRdccEHn/wkc+AQdBubWW2/tBf36668f7bvpppuyYV67
        dm1n37p160bb77333t75Nm/ePHUcMAyCDgOTPgtv52Mf+9hoX/vf6du/973vTR23ZcuWzr6jjjpq9HG1
        b37zm73zPfDAA9P+j8AQCDoM0PLlyzsBbj9b3t5WX7x4cWd7G/9Jjz/+eC/c99xzT/PJT36ys+2II44Y
        hR4YFkGHAWpvl6dxvuOOOzr/fuc735ke1qxcubKz5qqrrhqtm77twx/+cHoYMACCDgOU3j5vZ/bs2Z1/
        b9iwIT1stG36mvQjcO1cd9116WHAAAg6DNDOnTt7IU7nJz/5SXpYs23btt66dNqPuAHDI+gwUO2b2tIY
        T0772fR9/Uzqiy++2CxYsKC3fnLafS+99FJ6GDAAgg4D9dGPfrQX5Mk544wz0uVTVq1a1Vs/Oek3yAHD
        IegwUF/96ld7QZ6cjRs3psuntF8Fm66fnC9+8YvpcmAgBB0Gal9fCDM5v/nNb9LlU9rPmKfrJ2dfr7sD
        wyDoMFDt58739TOp7Ve8tvv2581vfnPvuPYd79O/3x0YFkEHgAAEHQACEHQACEDQASAAQQeAAAQdAAIQ
        dAAIQNABIABBB4AABB0AAhB0AAhA0AEgAEEHgAAEHQACEHQACEDQASAAQQeAAAQdAAIQdAAIQNABIABB
        B4AABB0AAhB0AAhA0AEgAEEHgAAEHQACEHQACEDQASAAQQeAAAQdAAIQdAAIQNABIABBB4AABB0AAhB0
        AAhA0AEgAEEHgAAEHQACEHQACEDQASAAQQeAAAQdAAIQdAAIQNABIABBB4AABB0AAhB0AAhA0AEgAEEH
        gAAEHQACEHQACEDQASAAQQeAAAQdAAIQdAAIQNABIABBB4AABB0AAhB0AAhA0AEgAEEHgAAEHQACEHQA
        CEDQASAAQQeAAAQdAAIQdAAIQNABIABBB4AABB0AAhB0AAhA0AEgAEEHgAAEHQACEHQACEDQASAAQQeA
        AAQdAAIQdAAIQNABIABBB4AABB0AAhB0AAhA0AEgAEEHgAAEHQACEHQACEDQASAAQQeAAAQdAAIQdAAI
        QNABIABBB4AABB0AAhB0AAhA0AEggP8Db8aBDbpcjDkAAAAASUVORK5CYII=
</value>
  </data>
</root>